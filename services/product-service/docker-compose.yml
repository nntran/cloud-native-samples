services:
  product-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
      args:
        - GO_VERSION=1.23.3
    container_name: product-service
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - MONGODB_URI=mongodb://mongodb:27017
      - MONGODB_DATABASE=product
      - REDIS_ADDRESS=redis:6379
      - RABBITMQ_URI=amqp://dev:dev@rabbitmq:5672/
      - RABBITMQ_EXCHANGE=product_exchange
      - AUTH_JWT_SECRET=your-secret-key
      - LOG_LEVEL=info
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    restart: unless-stopped
    networks:
      - product-network

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - product-network

  redis:
    image: redis:7.0-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - product-network

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=dev
      - RABBITMQ_DEFAULT_PASS=dev
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - product-network

networks:
  product-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
  rabbitmq_data:
