name: Order Service CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ master ]
    tags: [ v* ]
    # paths-ignore:
    #   - '**.md'
    paths:
      - services/order-service/src/**
      - services/order-service/Dockerfile
      - .github/workflows/order-service-ci.yml
  pull_request:
    branches: [ master ]
    # paths-ignore:
    #   - '**.md'
    paths:
      - services/order-service/src/**
      - services/order-service/Dockerfile
      - .github/workflows/order-service-ci.yml

# Environment variables available to all jobs and steps in this workflow
env:
  SOURCE_DIR: services/order-service
  NODE_VERSION: 22
  DOCKER_REGISTRY: docker.io  # ghcr.io
  DOCKER_REPOSITORY: ntdtfr
  DOCKER_IMAGE_NAME: order-service
  DOCKER_TARGET: production
  GITHUB_USER: ${{ secrets.GH_USER }}
  GITHUB_EMAIL: ${{ secrets.GH_EMAIL }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set up K8s tools
      uses: azure/setup-kubectl@v3

    - name: Install Skaffold
      run: |
        curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64
        chmod +x skaffold
        sudo mv skaffold /usr/local/bin
        skaffold config set --global collect-metrics false

    - name: Build
      id: build
      # working-directory: ${{ env.SOURCE_DIR }}
      run: |
        skaffold build -m order-service --default-repo ${{ env.DOCKER_REPOSITORY }} --file-output=build.json

    # - name: Run Tests
    #   run: skaffold test --file-output=test.json

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: build.json
        retention-days: 1

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ env.SOURCE_DIR }}/package-lock.json

    - name: Run dependency vulnerability check
      run: |
        cd ${{ env.SOURCE_DIR }}
        ls -al
        npm audit --production

    # - name: Run SAST scan
    #   uses: github/codeql-action/analyze@v2
    #   with:
    #     languages: javascript

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: [build-and-test, security-scan]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ${{ env.SOURCE_DIR }}
        file: Dockerfile
        target: production
        push: true
        tags: |
          ${{ env.DOCKER_REPOSITORY }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          ${{ env.DOCKER_REPOSITORY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build-and-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
    - name: Set up K8s tools
      uses: azure/setup-kubectl@v3

    - name: Install Skaffold
      run: |
        curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64
        chmod +x skaffold
        sudo mv skaffold /usr/local/bin
        skaffold config set --global collect-metrics false

    - name: Deploy to Dev
      if: github.event_name == 'pull_request'
      run:  echo "Deploying to production"  #skaffold deploy --build-artifacts=build.json --namespaces=dev

    - name: Deploy to Production
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: echo "Deploying to production"   #skaffold deploy --build-artifacts=build.json --namespaces=production
